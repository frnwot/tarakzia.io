// script.js

function calculateChada() {
  const profession = document.getElementById("profession").value;
  const salaryInput = document.getElementById("salary");
  const salary = Number(salaryInput.value);

  const errorMessage = document.getElementById("error-message");
  const resultContainer = document.getElementById("result-container");
  errorMessage.classList.add("hidden");
  resultContainer.classList.add("hidden");

  if (profession === "default" || !salary || salary <= 0) {
    errorMessage.textContent = "ржЕржирзБржЧрзНрж░рж╣ ржХрж░рзЗ рж╕ржарж┐ржХ ржкрзЗрж╢рж╛ ржПржмржВ ржорж╛рж╕рж┐ржХ ржЖржпрж╝ рж▓рж┐ржЦрзБржиред";
    errorMessage.classList.remove("hidden");
    return;
  }

  // Define contribution % by profession (fictional for satire)
  const contributionPercentages = {
    doctor: 10,
    engineer: 8,
    teacher: 7,
    govt_job: 12,
    nongovt_job: 15,
    businessman: 20,
    freelancer: 6,
    rickshaw_puller: 3,
    day_laborer: 2,
    unemployed: 0,
    expatriate_worker: 25,
    genz: 5,
    retired_awami: 50,
    other: 7,
  };

  // Get contribution %
  let contribution = contributionPercentages[profession] ?? 7;

  // Special overrides
  if (profession === "retired_awami") {
    showRetiredAwamiMessage();
    return;
  }

  // Calculate
  const chadaAmount = (salary * contribution) / 100;
  const remainingSalary = salary - chadaAmount;

  // Prepare icons (using emoji)
  const survivalIcon = remainingSalary >= 0
    ? "ЁЯТ╡"
    : "ЁЯШн";

  const leaderMoodIcon = chadaAmount > 0 ? "ЁЯШИ" : "ЁЯШР";

  const contributionIcon = contribution > 15 ? "ЁЯПж" : "ЁЯТ░";

  // Update DOM
  document.getElementById("survival-icon").textContent = survivalIcon;
  document.getElementById("remaining-salary").textContent =
    `${remainingSalary.toFixed(2)} ржЯрж╛ржХрж╛`;

  document.getElementById("survival-text").textContent =
    remainingSalary >= 0
      ? "ржПржЦржирзЛ ржмрж╛ржБржЪрж╛рж░ ржЖрж╢рж╛ ржЖржЫрзЗ!"
      : "ржмрж╛ржБржЪрж╛ ржжрзБржГрж╕рж╛ржзрзНржп, ржкржХрзЗржЯ ржлрж╛ржБржХрж╛!";

  document.getElementById("leader-mood-icon").textContent = leaderMoodIcon;
  document.getElementById("leader-mood-text").textContent =
    chadaAmount > 0
      ? "рж╣рж╛ржЗ ржХржорж╛ржирзНржб ржЦрзБрж╢рж┐"
      : "рж╣рж╛ржЗ ржХржорж╛ржирзНржб рж╣рждрж╛рж╢";

  document.getElementById("contribution-icon").textContent = contributionIcon;
  document.getElementById("contribution-text").textContent =
    `ржЖржкржирж┐ ржкрж░рж┐рж╢рзЛржз ржХрж░ржмрзЗржи ${chadaAmount.toFixed(2)} ржЯрж╛ржХрж╛ (${contribution}%)`;

  // Humor text
  const humorPhrases = [
    "рж░рж╛ржЬржирзАрждрж┐ ржорж╛ржирзЗ ржкржХрзЗржЯ ржлрж╛ржБржХрж╛, ржХрж┐ржирзНрждрзБ ржоржи ржЦрзЛрж▓рж╛!",
    "ржЪрж╛ржБржжрж╛ ржжрж┐рж▓рзЗржЗ ржирзЗрждрж╛ рж╣рж╛рж╕рзЗ, ржирж╛ ржжрж┐рж▓рзЗ ржмржЮрзНржЪржирж╛!",
    "ржпржд ржЪрж╛ржБржжрж╛, рждржд ржнрж╛рж▓рзЛржмрж╛рж╕рж╛!",
    "ржЪрж╛ржБржжрж╛ ржжрж┐ржпрж╝рзЗ ржпрзБржжрзНржзрзЗ ржиржпрж╝, ржмрзНржпрж╛рж▓ржХржирж┐рждрзЗ рж░рж╛ржЬржирзАрждрж┐!",
  ];
  const humorText =
    humorPhrases[Math.floor(Math.random() * humorPhrases.length)];
  document.getElementById("humor-text").textContent = humorText;

  // Detailed results
  const details = `
    <p>ржЖржкржирж╛рж░ ржкрзЗрж╢рж╛: <strong>${profession.replace(/_/g, " ")}</strong></p>
    <p>ржорж╛рж╕рж┐ржХ ржЖржпрж╝: <strong>${salary.toFixed(2)} ржЯрж╛ржХрж╛</strong></p>
    <p>ржорж╛рж╕рж┐ржХ ржЪрж╛ржБржжрж╛: <strong>${chadaAmount.toFixed(2)} ржЯрж╛ржХрж╛ (${contribution}%)</strong></p>
    <p>ржорж╛рж╕рж┐ржХ рж╣рж╛рждрзЗ ржерж╛ржХржмрзЗ: <strong>${remainingSalary.toFixed(2)} ржЯрж╛ржХрж╛</strong></p>
  `;
  document.getElementById("result-details").innerHTML = details;

  // Show result container
  resultContainer.classList.remove("hidden");

  // Render chart
  renderChart(chadaAmount, remainingSalary);
}

let chartInstance = null;

function renderChart(chadaAmount, remainingSalary) {
  const ctx = document.getElementById("chadaChart").getContext("2d");

  if (chartInstance) {
    chartInstance.destroy();
  }

  chartInstance = new Chart(ctx, {
    type: "doughnut",
    data: {
      labels: ["ржЪрж╛ржБржжрж╛ (ржмрзНржпржпрж╝)", "рж╣рж╛рждрзЗ ржерж╛ржХржмрзЗ"],
      datasets: [
        {
          data: [chadaAmount, remainingSalary < 0 ? 0 : remainingSalary],
          backgroundColor: ["#ef4444", "#3b82f6"],
          hoverOffset: 20,
        },
      ],
    },
    options: {
      plugins: {
        legend: {
          labels: {
            font: {
              family: "'Noto Sans Bengali', sans-serif",
              size: 16,
              weight: "bold",
            },
            color: "#1e40af",
          },
          position: "bottom",
        },
      },
    },
  });
}

function showRetiredAwamiMessage() {
  const errorMessage = document.getElementById("error-message");
  const resultContainer = document.getElementById("result-container");

  resultContainer.classList.add("hidden");
  errorMessage.innerHTML = `
    <div class="text-center p-6 bg-green-50 border-2 border-green-300 rounded-lg">
      <h2 class="text-2xl font-bold text-green-700 mb-4">ЁЯПЫя╕П ржЕржмрж╕рж░ржкрзНрж░рж╛ржкрзНржд ржирзЗрждрж╛рж░ ржЬржирзНржп ржмрж┐рж╢рзЗрж╖ ржмрж╛рж░рзНрждрж╛! ЁЯПЫя╕П</h2>
      <p class="text-green-700 mb-2">
        ржЖржкржирж┐ рждрзЛ ржЖржорж╛ржжрзЗрж░ ржкрзБрж░рж╛ржирзЛ рж╕рж╣ржпрзЛржжрзНржзрж╛! рзлрзж% ржЫрж╛ржбрж╝рзЗ ржЪрж╛ржБржжрж╛, рззрзл ржмржЫрж░рзЗрж░ ржХрж┐рж╕рзНрждрж┐рждрзЗ ржкрж░рж┐рж╢рзЛржз, ржкрж╛рж░рзНржЯрж┐ ржЕржлрж┐рж╕рзЗ ржмрж┐ржирж╛ржорзВрж▓рзНржпрзЗ ржЪрж╛!
      </p>
      <p class="italic text-green-600">"рж░рж╛ржЬржирзАрждрж┐рждрзЗ ржЕржмрж╕рж░ ржирзЗржЗ, рж╢рзБржзрзБ ржжрж╛ржпрж╝рж┐рждрзНржм ржмржжрж▓рж╛ржпрж╝!"</p>
    </div>
  `;
  errorMessage.classList.remove("hidden");
}
